
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftADDSUBleftMULDIVADD BEC DIV DO ELSE END EQ GEQ GRTR ID IF LEQ LESS LPAR MUL NEQ NUM READ RPAR SEM SUB THEN WHILE WRITEProgram : StatementsStatements : StatementStatements : Statements SEM StatementStatement : If\n                 | While\n                 | Assignment\n                 | Read\n                 | WriteIf : IF Comparison THEN Statements ENDIf : IF Comparison THEN Statements ELSE Statements ENDWhile : WHILE Comparison DO Statements ENDAssignment : Id BEC ExpressionComparison : Expression Relation ExpressionRelation : EQ\n                | NEQ\n                | LESS\n                | LEQ\n                | GRTR\n                | GEQExpression : Expression ADD Expression\n                 | Expression SUB Expression\n                 | Expression MUL Expression\n                 | Expression DIV ExpressionExpression : LPAR Expression RPARExpression : NUMExpression : IdId : IDRead : READ IdWrite : WRITE Expression'
    
_lr_action_items = {'IF':([0,15,26,39,50,],[9,9,9,9,9,]),'WHILE':([0,15,26,39,50,],[10,10,10,10,10,]),'READ':([0,15,26,39,50,],[12,12,12,12,12,]),'WRITE':([0,15,26,39,50,],[13,13,13,13,13,]),'ID':([0,9,10,12,13,15,18,22,26,27,28,29,30,31,32,33,34,35,36,37,39,50,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,-14,-15,-16,-17,-18,-19,14,14,]),'$end':([1,2,3,4,5,6,7,8,14,19,20,23,24,25,40,43,44,45,46,47,49,51,53,],[0,-1,-2,-4,-5,-6,-7,-8,-27,-25,-26,-28,-29,-3,-12,-20,-21,-22,-23,-24,-9,-11,-10,]),'SEM':([2,3,4,5,6,7,8,14,19,20,23,24,25,40,41,43,44,45,46,47,48,49,51,52,53,],[15,-2,-4,-5,-6,-7,-8,-27,-25,-26,-28,-29,-3,-12,15,-20,-21,-22,-23,-24,15,-9,-11,15,-10,]),'END':([3,4,5,6,7,8,14,19,20,23,24,25,40,41,43,44,45,46,47,48,49,51,52,53,],[-2,-4,-5,-6,-7,-8,-27,-25,-26,-28,-29,-3,-12,49,-20,-21,-22,-23,-24,51,-9,-11,53,-10,]),'ELSE':([3,4,5,6,7,8,14,19,20,23,24,25,40,41,43,44,45,46,47,49,51,53,],[-2,-4,-5,-6,-7,-8,-27,-25,-26,-28,-29,-3,-12,50,-20,-21,-22,-23,-24,-9,-11,-10,]),'LPAR':([9,10,13,18,22,27,28,29,30,31,32,33,34,35,36,37,],[18,18,18,18,18,18,18,18,18,18,-14,-15,-16,-17,-18,-19,]),'NUM':([9,10,13,18,22,27,28,29,30,31,32,33,34,35,36,37,],[19,19,19,19,19,19,19,19,19,19,-14,-15,-16,-17,-18,-19,]),'BEC':([11,14,],[22,-27,]),'ADD':([14,17,19,20,24,38,40,42,43,44,45,46,47,],[-27,28,-25,-26,28,28,28,28,-20,-21,-22,-23,-24,]),'SUB':([14,17,19,20,24,38,40,42,43,44,45,46,47,],[-27,29,-25,-26,29,29,29,29,-20,-21,-22,-23,-24,]),'MUL':([14,17,19,20,24,38,40,42,43,44,45,46,47,],[-27,30,-25,-26,30,30,30,30,30,30,-22,-23,-24,]),'DIV':([14,17,19,20,24,38,40,42,43,44,45,46,47,],[-27,31,-25,-26,31,31,31,31,31,31,-22,-23,-24,]),'EQ':([14,17,19,20,43,44,45,46,47,],[-27,32,-25,-26,-20,-21,-22,-23,-24,]),'NEQ':([14,17,19,20,43,44,45,46,47,],[-27,33,-25,-26,-20,-21,-22,-23,-24,]),'LESS':([14,17,19,20,43,44,45,46,47,],[-27,34,-25,-26,-20,-21,-22,-23,-24,]),'LEQ':([14,17,19,20,43,44,45,46,47,],[-27,35,-25,-26,-20,-21,-22,-23,-24,]),'GRTR':([14,17,19,20,43,44,45,46,47,],[-27,36,-25,-26,-20,-21,-22,-23,-24,]),'GEQ':([14,17,19,20,43,44,45,46,47,],[-27,37,-25,-26,-20,-21,-22,-23,-24,]),'RPAR':([14,19,20,38,43,44,45,46,47,],[-27,-25,-26,47,-20,-21,-22,-23,-24,]),'THEN':([14,16,19,20,42,43,44,45,46,47,],[-27,26,-25,-26,-13,-20,-21,-22,-23,-24,]),'DO':([14,19,20,21,42,43,44,45,46,47,],[-27,-25,-26,39,-13,-20,-21,-22,-23,-24,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Program':([0,],[1,]),'Statements':([0,26,39,50,],[2,41,48,52,]),'Statement':([0,15,26,39,50,],[3,25,3,3,3,]),'If':([0,15,26,39,50,],[4,4,4,4,4,]),'While':([0,15,26,39,50,],[5,5,5,5,5,]),'Assignment':([0,15,26,39,50,],[6,6,6,6,6,]),'Read':([0,15,26,39,50,],[7,7,7,7,7,]),'Write':([0,15,26,39,50,],[8,8,8,8,8,]),'Id':([0,9,10,12,13,15,18,22,26,27,28,29,30,31,39,50,],[11,20,20,23,20,11,20,20,11,20,20,20,20,20,11,11,]),'Comparison':([9,10,],[16,21,]),'Expression':([9,10,13,18,22,27,28,29,30,31,],[17,17,24,38,40,42,43,44,45,46,]),'Relation':([17,],[27,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Program","S'",1,None,None,None),
  ('Program -> Statements','Program',1,'p_program','ply-parser.py',288),
  ('Statements -> Statement','Statements',1,'p_statements_statement','ply-parser.py',292),
  ('Statements -> Statements SEM Statement','Statements',3,'p_statements_statements','ply-parser.py',296),
  ('Statement -> If','Statement',1,'p_statement','ply-parser.py',302),
  ('Statement -> While','Statement',1,'p_statement','ply-parser.py',303),
  ('Statement -> Assignment','Statement',1,'p_statement','ply-parser.py',304),
  ('Statement -> Read','Statement',1,'p_statement','ply-parser.py',305),
  ('Statement -> Write','Statement',1,'p_statement','ply-parser.py',306),
  ('If -> IF Comparison THEN Statements END','If',5,'p_if','ply-parser.py',310),
  ('If -> IF Comparison THEN Statements ELSE Statements END','If',7,'p_else_if','ply-parser.py',314),
  ('While -> WHILE Comparison DO Statements END','While',5,'p_while','ply-parser.py',318),
  ('Assignment -> Id BEC Expression','Assignment',3,'p_assignment','ply-parser.py',322),
  ('Comparison -> Expression Relation Expression','Comparison',3,'p_comparison','ply-parser.py',326),
  ('Relation -> EQ','Relation',1,'p_relation','ply-parser.py',330),
  ('Relation -> NEQ','Relation',1,'p_relation','ply-parser.py',331),
  ('Relation -> LESS','Relation',1,'p_relation','ply-parser.py',332),
  ('Relation -> LEQ','Relation',1,'p_relation','ply-parser.py',333),
  ('Relation -> GRTR','Relation',1,'p_relation','ply-parser.py',334),
  ('Relation -> GEQ','Relation',1,'p_relation','ply-parser.py',335),
  ('Expression -> Expression ADD Expression','Expression',3,'p_expression_binary','ply-parser.py',339),
  ('Expression -> Expression SUB Expression','Expression',3,'p_expression_binary','ply-parser.py',340),
  ('Expression -> Expression MUL Expression','Expression',3,'p_expression_binary','ply-parser.py',341),
  ('Expression -> Expression DIV Expression','Expression',3,'p_expression_binary','ply-parser.py',342),
  ('Expression -> LPAR Expression RPAR','Expression',3,'p_expression_parenthesis','ply-parser.py',346),
  ('Expression -> NUM','Expression',1,'p_expression_num','ply-parser.py',350),
  ('Expression -> Id','Expression',1,'p_expression_id','ply-parser.py',354),
  ('Id -> ID','Id',1,'p_id','ply-parser.py',358),
  ('Read -> READ Id','Read',2,'p_read','ply-parser.py',362),
  ('Write -> WRITE Expression','Write',2,'p_write','ply-parser.py',366),
]
